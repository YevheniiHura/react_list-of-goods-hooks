{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","reorderedGoods","visibleGoods","sort","firstGood","secondGood","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0DCZQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDNAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA/BD,SACLX,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOZ,GAqBzB,OAnBIS,IAAaX,EAASU,MACxBI,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQN,GACN,KAAKX,EAASkB,OACZ,OAAOF,EAAUG,OAASF,EAAWE,OAEvC,KAAKnB,EAASoB,SACZ,OAAOJ,EAAUK,cAAcJ,GAEjC,QACE,OAAO,MAKXT,GACFM,EAAaQ,UAGRR,EAMgBS,CACrBlB,EACA,CAAEM,WAAUH,eAoBd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWb,IAAaX,EAASoB,SAC7B,iBACA,0BACJM,QArB0B,WAChCd,EAAYZ,EAASoB,WAejB,iCAUA,wBACEK,KAAK,SACLD,UAAWb,IAAaX,EAASkB,OAC7B,oBACA,6BACJQ,QA3BoB,WAC1Bd,EAAYZ,EAASkB,SAqBjB,4BAUA,wBACEO,KAAK,SACLD,UAAWhB,EACP,oBACA,6BACJkB,QA7CQ,WACdjB,GAAeD,IAuCX,sBAUEG,IAAaX,EAASU,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QA1CI,WACZjB,GAAc,GACdG,EAAYZ,EAASU,OAqCf,sBAUJ,cAAC,EAAD,CAAaR,MAAOW,QE3H1Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.908a50e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { ListOfGoods } from './components/ListOfGoods/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleAlphabeticalSorting = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleLengthSorting = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={handleAlphabeticalSorting}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={handleLengthSorting}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}